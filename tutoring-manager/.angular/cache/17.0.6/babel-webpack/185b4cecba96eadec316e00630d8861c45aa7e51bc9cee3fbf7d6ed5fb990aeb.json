{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.getProfessorURL = environment.API_URL + 'api/person/professor';\n      this.getStudentURL = environment.API_URL + 'api/person/student';\n      this.getStudentListURL = environment.API_URL + 'api/person/student-list';\n    }\n    getProfessor(payload) {\n      const url = `${this.getProfessorURL}/${payload}`;\n      return this.http.post(url, httpOptions).pipe(tap(response => console.log('get professor ok response:', response), response => console.log('get professor error response:', response)));\n    }\n    getStudent(payload) {\n      const url = `${this.getStudentURL}/${payload}`;\n      return this.http.post(url, httpOptions).pipe(tap(response => console.log('get student ok response:', response), response => console.log('get student error response:', response)));\n    }\n    getStudentList(payload) {\n      return this.http.post(this.getStudentListURL, payload, httpOptions).pipe(tap(response => console.log('get student list ok response:', response), response => console.log('get student list error response:', response)));\n    }\n    getProfessorNoteList(payload) {\n      return this.http.post(this.getStudentListURL, payload, httpOptions).pipe(tap(response => console.log('get student list ok response:', response), response => console.log('get student list error response:', response)));\n    }\n    static #_ = this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}